/*
Min25筛可以在O((n^(3/4))/logn)的时间内求积性函数f(x)的前缀和
适用条件：f(p)可以表示为简单多项式
        f(p^k)可以快速算出
        其中，p为质数。
知乎讲解链接：求十亿内所有质数的和，怎么做最快? - PlanarG的回答 - 知乎
https://www.zhihu.com/question/29580448/answer/882461056
*/
#pragma comment(linker, "/STACK:102400000,102400000") 
#include <bits/stdc++.h>
using namespace std;

const int N = 1000010;

typedef long long LL;

namespace Min25 {

    int prime[N], id1[N], id2[N], flag[N], ncnt, m;

    LL g[N], sum[N], a[N], T, n;

    inline int ID(LL x) {
        return x <= T ? id1[x] : id2[n / x];
    }

    inline LL calc(LL x) {
        return x * (x + 1) / 2 - 1;
    }

    inline LL f(LL x) {
        return x;
    }

    inline void init(LL mod) {
        T = sqrt(n + 0.5);
        for (int i = 2; i <= T; i++) {
            if (!flag[i]) prime[++ncnt] = i, sum[ncnt] = sum[ncnt - 1] + i;
            for (int j = 1; j <= ncnt && i * prime[j] <= T; j++) {
                flag[i * prime[j]] = 1;
                if (i % prime[j] == 0) break;
            }
        }
        for (LL l = 1; l <= n; l = n / (n / l) + 1) {
            a[++m] = n / l;
            if (a[m] <= T) id1[a[m]] = m; else id2[n / a[m]] = m;
            g[m] = calc(a[m]);
        }
        for (int i = 1; i <= ncnt; i++)
            for (int j = 1; j <= m && (LL)prime[i] * prime[i] <= a[j]; j++)
                g[j] = g[j]  - (LL)(prime[i] ) * (g[ID(a[j] / prime[i])] - sum[i - 1]);
    }

    inline LL solve(LL x, LL mod) {
        if (x <= 1) return x;
        return n = x, init(mod), g[ID(n)];
    }
    inline void ininMem() {
        /*memset(prime, 0, sizeof(prime));
        memset(id1, 0, sizeof(id1));
        memset(id2, 0, sizeof(id2));
        memset(flag, 0, sizeof(flag));
        memset(g, 0, sizeof(g));
        memset(sum, 0, sizeof(sum));
        memset(a, 0, sizeof(a));*/
        ncnt = m = T = n = 0;
    }
}

LL ksm(LL a, LL b, LL mod)
{
    LL ans = 1, base = a;
    while (b) {
        if (b & 1) ans = ans * base % mod;
        b >>= 1;
        base = base * base % mod;
    }
    return ans;
}
int main() {
    freopen("in.txt", "r", stdin);
	LL T, n, k;
    scanf("%lld", &T);
	while (T--) {
        Min25::ininMem();
        scanf("%lld%lld", &n, &k);
		if (n == 1) {
			cout << 0 << endl; continue;
		}
		n++;
		LL ans = ((n - 2L) % k) * ((n + 3) % k) % k;
        ans = (ans * (ksm(2, k - 2, k) % k)) % k;
		ans = (ans + k - 2) % k;
		ans = (((Min25::solve(n, k) + k) % k) + ans) % k;
        printf("%lld\n", ans);
	}
}