#include <iostream>  
#include <cstdio>  
#include <cstring>  
#include <algorithm>  
using namespace std;  
#define lson l,m,rt<<1  
#define rson m+1,r,rt<<1|1  
const int maxn=50000;  
int sum[maxn<<2];  
  
void PushUp(int rt)  
{  
    sum[rt]=sum[rt<<1]+sum[rt<<1|1];  
}  
  
void build(int l,int r,int rt)  
{  
    if(l==r){  
        scanf("%d",&sum[rt]);  
        return;  
    }  
    int m=(l+r)>>1;  
    build(lson);  
    build(rson);  
    PushUp(rt);  
}  
  
void update(int p,int add,int l,int r,int rt)  
{  
    if(l==r){  
        sum[rt]+=add;  
        return;  
    }  
    int m=(l+r)>>1;  
    if(p<=m)    update(p,add,lson);  
    else        update(p,add,rson);  
    PushUp(rt);  
}  
  
int query(int L,int R,int l,int r,int rt)  
{  
    if(L<=l&&r<=R){  
        return sum[rt];  
    }  
    int ans=0;  
    int m=(l+r)>>1;  
    if(L<=m)    ans+=query(L,R,lson);  
    if(R>m)     ans+=query(L,R,rson);  
    return ans;  
}  
  
int main()  
{  
    //freopen("in.txt","r",stdin);  
    //freopen("out.txt","w",stdout);  
    int T,n,a,b;  
    scanf("%d",&T);  
    for(int i=1;i<=T;i++){  
        printf("Case %d:\n",i);  
        scanf("%d",&n);  
        build(1,n,1);  
        char ptr[10];  
        while(scanf("%s",ptr))  
        {  
            if(ptr[0]=='E')    break;  
            scanf("%d%d",&a,&b);  
            if(ptr[0]=='A'){  
                update(a,b,1,n,1);  
            }  
            else if(ptr[0]=='S'){  
                update(a,-b,1,n,1);  
            }  
            else if(ptr[0]=='Q'){  
                printf("%d\n",query(a,b,1,n,1));  
            }  
        }  
    }  
    return 0;  
}  