Packets

Time Limit: 1000MS

Memory Limit: 10000K

Total Submissions: 54557

Accepted: 18556

Description

A factory produces products packed in square packets of the same height h and of the sizes 1*1, 2*2, 3*3, 4*4, 5*5, 6*6. These products are always delivered to customers in the square parcels of the same height h as the products have and of the size 6*6. Because of the expenses it is the interest of the factory as well as of the customer to minimize the number of parcels necessary to deliver the ordered products from the factory to the customer. A good program solving the problem of finding the minimal number of parcels necessary to deliver the given products according to an order would save a lot of money. You are asked to make such a program.

Input

The input file consists of several lines specifying orders. Each line specifies one order. Orders are described by six integers separated by one space representing successively the number of packets of individual size from the smallest size 1*1 to the biggest size 6*6. The end of the input file is indicated by the line containing six zeros.

Output

The output file contains one line for each line in the input file. This line contains the minimal number of parcels into which the order from the corresponding line of the input file can be packed. There is no line in the output file corresponding to the last ``null'' line of the input file.

Sample Input

0 0 4 0 0 1

7 5 1 0 0 0

0 0 0 0 0 0

Sample Output

2

1

 

 

题目大意：现在由键盘输入6个正整数，代表长宽为1*1 ,2*2 ,3*3,4*4,5*5,6*6，高为h的产品个数，现在用6*6*h的盒子去装这些产品，那么最少要用多少个盒子。

 

题目分析：首先6*6,5*5,4*4的产品每个肯定都是要用一个盒子装的，然后里面在加上一些2*2,1*1的盒子填满，对于3*3的盒子4个可以装满一个盒子。看起来很简单的题，只能说自己太笨了，做了几个小时一直没有a掉，其实都是一些不应该的错误。

 

代码：

[cpp] view plain copy
<span style="font-family:Microsoft YaHei;font-size:18px;">#include<iostream>  
   
usingnamespacestd;  
int main()  
{  
      inta[10];  
      while(1)  
      {  
          intsum = 0, number = 0;  
          for(int i = 1; i<7; i++){  
                 cin>> a[i];  
                 sum+= a[i];  
           }  
          if(sum == 0){  
                break;  
           }  
          else{  
                 number= a[6] + a[5] + a[4];      //6*65*5 4*4每个都要用一个箱子来装，3*3每8个可以装一个箱子  
                 a[2]= a[2] - a[4] * 5;     //装4*4的箱子剩下的空间可以装多少2*2的箱子  
                 a[1]= a[1] - a[5] * 11;     //装5*5的箱子剩下的空间可以装多少1*1的箱子  
                if(a[3]>0){  
                      number+= a[3] / 4;  
                      a[3]= a[3] % 4;           //看最后一个箱子里装了多少3*3的箱子  
                     if(a[3]>0){            //减去剩下的空间可以装的2*21*1的箱子数  
                            number++;  
                            a[2]= a[2] - 7 + 2 * a[3];  
                            a[1]= a[1] - 8 + a[3];  
                      }  
                 }  
                if(a[2]<0){           //如果装2*2的箱子变成了负数则减掉8倍的1*1的箱子  
                      a[1]+= a[2] * 4;  
                      a[2]= 0;  
                 }  
                elseif(a[2]>0){  
                      number+= a[2] / 9;  
                      a[2]= a[2] % 9;  
                     if(a[2]>0){  
                            number++;  
                            a[1]-= (36 - a[2] * 4);  
                      }  
                 }  
                if(a[1]>0){  
                      number+= a[1] / 36;  
                     if(a[1] % 36>0){  
                            number++;  
                      }  
                 }  
                 cout<< number << endl;  
           }  
      }  
      return0;  
}</span>  
