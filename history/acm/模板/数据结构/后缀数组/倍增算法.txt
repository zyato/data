namespace Suffix {
    int wa[maxn],wb[maxn],wv[maxn],wt[maxn];
    int cmp(int *r,int a,int b,int k)
    {
        return r[a]==r[b]&&r[a+k]==r[b+k];
    }
    void da(int *r,int *sa,int n,int m)
    {
        int i,j,p,*x=wa,*y=wb,*t;
        for(i=0; i<m; i++)  wt[i]=0;
        for(i=0; i<=n; i++)  wt[x[i]=r[i]]++;
        for(i=1; i<m; i++)  wt[i]+=wt[i-1];
        for(i=n; i>=0; i--)  sa[--wt[x[i]]]=i;
        p=1;
        j=1;
        for(; p<=n; j*=2,m=p)
        {
            for(p=0,i=n+1-j; i<=n; i++)  y[p++]=i;
            for(i=0; i<=n; i++)  if(sa[i]>=j)  y[p++]=sa[i]-j;
            for(i=0; i<=n; i++)  wv[i]=x[y[i]];
            for(i=0; i<m; i++)  wt[i]=0;
            for(i=0; i<=n; i++)  wt[wv[i]]++;
            for(i=1; i<m; i++)  wt[i]+=wt[i-1];
            for(i=n; i>=0; i--)  sa[--wt[wv[i]]]=y[i];
            t=x;
            x=y;
            y=t;
            x[sa[0]]=0;
            for(p=1,i=1; i<=n; i++)
                x[sa[i]]=cmp(y,sa[i-1],sa[i],j)? p-1:p++;
        }
    }
    void getheight(int *r,int* sa,int n)
    {
        int i,j,k=0;
        for(i=1; i<=n; i++)  Rank[sa[i]]=i;
        for(i=0; i<n; i++)
        {
            if(k)
                k--;
            else
                k=0;
            j=sa[Rank[i]-1];
            while(r[i+k]==r[j+k])
                k++;
            height[Rank[i]-1]=k;
        }
    }
};