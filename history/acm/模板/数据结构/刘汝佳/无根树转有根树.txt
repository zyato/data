#include <cmath>
#include <vector>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>

using namespace std;
const int maxn=100;
int n,root;
int p[maxn];
vector<int>G[maxn];

void init()
{
    memset(p,-1,sizeof(p));
    for(int i=1;i<=n;i++){
        G[i].clear();
    }
}

void read_tree()
{
    int u,v;
    for(int i=0;i<n-1;i++){
        cin>>u>>v;
        G[u].push_back(v);
        G[v].push_back(u);
    }
}

void dfs(int u,int fa)
{
    int d=G[u].size();
    for(int i=0;i<d;i++){
        int v=G[u][i];
        if(v!=fa)   dfs(v,p[v]=u);
    }
}

int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    while(cin>>n>>root)
    {
        init();
        read_tree();
        dfs(root,-1);
    }
    return 0;
}

