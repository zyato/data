FatMouse's Speed
Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)
Total Submission(s): 16318    Accepted Submission(s): 7206
Special Judge

Problem Description
FatMouse believes that the fatter a mouse is, the faster it runs. To disprove this, you want to take the data on a collection of mice and put as large a subset of this data as possible into a sequence so that the weights are increasing, but the speeds are decreasing.
 

Input
Input contains data for a bunch of mice, one mouse per line, terminated by end of file.

The data for a particular mouse will consist of a pair of integers: the first representing its size in grams and the second representing its speed in centimeters per second. Both integers are between 1 and 10000. The data in each test case will contain information for at most 1000 mice.

Two mice may have the same weight, the same speed, or even the same weight and speed. 
 

Output
Your program should output a sequence of lines of data; the first line should contain a number n; the remaining n lines should each contain a single positive integer (each one representing a mouse). If these n integers are m[1], m[2],..., m[n] then it must be the case that 

W[m[1]] < W[m[2]] < ... < W[m[n]]

and 

S[m[1]] > S[m[2]] > ... > S[m[n]]

In order for the answer to be correct, n should be as large as possible.
All inequalities are strict: weights must be strictly increasing, and speeds must be strictly decreasing. There may be many correct outputs for a given input, your program only needs to find one. 
 

Sample Input
6008 1300
6000 2100
500 2000
1000 4000
1100 3000
6000 2000
8000 1400
6000 1200
2000 1900
 

Sample Output
4
4
5
9
7
 

Source
Zhejiang University Training Contest 2001
 

Recommend
Ignatius   |   We have carefully selected several similar problems for you:  1024 1074 1114 1159 1081 

题目大意：现在有n个老鼠，每个老鼠有体重和速度，现在要求一段最长的序列，这段序列的老鼠的体重递增，速度递减，输出这段序列的长度，然后接下来输出这些老鼠的编号。

题目分析：这就是一个最长单增子序列的题，首先给一个属性排序就行。感觉自己脑子进水了，刚开始竟然打算用nlogn的算法，导致wa了好久，后来看了一下别人的博客，算法还是理解的不够深。

代码：
[cpp] view plain copy
<span style="font-family:KaiTi_GB2312;">#include <iostream>  
#include <stdio.h>  
#include <algorithm>  
  
using namespace std;  
const int Size=2000;  
const int INF=0x7fffffff;  
int len=0;  
int dp[Size],position[Size][Size];  
  
struct mice{  
    int a,b,pos;  
};  
mice str[Size];  
  
bool cmp(mice m1,mice m2)  
{  
    if(m1.a!=m2.a){  
        return m1.a<m2.a;  
    }  
    else{  
        return m1.b>m2.b;  
    }  
}  
  
int main()  
{  
    //freopen("in.txt","r",stdin);  
    int MAX=-1,p;  
    while(cin>>str[len].a>>str[len].b)  
    {  
        str[len].pos=len+1;  
        len++;  
    }  
    sort(str,str+len,cmp);  
    for(int i=0;i<len;i++){  
        dp[i]=1;  
        position[i][1]=str[i].pos;  
    }  
    for(int i=1;i<len;i++){  
        for(int j=0;j<i;j++){  
            if(str[i].a>str[j].a&&str[i].b<str[j].b&&dp[i]<dp[j]+1){  
                dp[i]=dp[j]+1;  
                for(int k=1;k<dp[i];k++){  
                    position[i][k]=position[j][k];  
                }  
                position[i][dp[i]]=str[i].pos;  
            }  
        }  
        if(MAX<dp[i]){  
            MAX=dp[i];  
            p=i;  
        }  
    }  
    cout<<MAX<<endl;  
    for(int i=1;i<MAX+1;i++){  
        cout<<position[p][i]<<endl;  
    }  
    return 0;  
}</span> 