Constructing Roads In JGShining's Kingdom
Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)
Total Submission(s): 25413    Accepted Submission(s): 7220


Problem Description
JGShining's kingdom consists of 2n(n is no more than 500,000) small cities which are located in two parallel lines.

Half of these cities are rich in resource (we call them rich cities) while the others are short of resource (we call them poor cities). Each poor city is short of exactly one kind of resource and also each rich city is rich in exactly one kind of resource. You may assume no two poor cities are short of one same kind of resource and no two rich cities are rich in one same kind of resource. 

With the development of industry, poor cities wanna import resource from rich ones. The roads existed are so small that they're unable to ensure the heavy trucks, so new roads should be built. The poor cities strongly BS each other, so are the rich ones. Poor cities don't wanna build a road with other poor ones, and rich ones also can't abide sharing an end of road with other rich ones. Because of economic benefit, any rich city will be willing to export resource to any poor one.

Rich citis marked from 1 to n are located in Line I and poor ones marked from 1 to n are located in Line II. 

The location of Rich City 1 is on the left of all other cities, Rich City 2 is on the left of all other cities excluding Rich City 1, Rich City 3 is on the right of Rich City 1 and Rich City 2 but on the left of all other cities ... And so as the poor ones. 

But as you know, two crossed roads may cause a lot of traffic accident so JGShining has established a law to forbid constructing crossed roads.

For example, the roads in Figure I are forbidden.




In order to build as many roads as possible, the young and handsome king of the kingdom - JGShining needs your help, please help him. ^_^
 

Input
Each test case will begin with a line containing an integer n(1 ≤ n ≤ 500,000). Then n lines follow. Each line contains two integers p and r which represents that Poor City p needs to import resources from Rich City r. Process to the end of file.
 

Output
For each test case, output the result in the form of sample. 
You should tell JGShining what's the maximal number of road(s) can be built. 
 

Sample Input
2
1 2
2 1
3
1 2
2 3
3 1
 

Sample Output
Case 1:
My king, at most 1 road can be built.

Case 2:
My king, at most 2 roads can be built.

Hint

Huge input, scanf is recommended.
 
 

Author
JGShining（极光炫影）
 

Recommend
We have carefully selected several similar problems for you:  1024 1081 1074 1078 1080 

题目大意：两条线，每条线上各有n个点，表示n个城市，第一条表示rich 城市，第二条表示poor 城市，从第一条
线连接到第二条线上，问最多能练几条，已知所有可连接的线段，同时连接的线段之间没有相交。

题目分析：首先按照富有城市的序号存储贫穷城市，然后求这个序列的最长上升子序列，这样使得线段最多且不
相交。

代码：
[cpp] view plain copy
#include <iostream>  
#include <stdio.h>  
#include <string.h>  
#include <algorithm>  
  
using namespace std;  
int n,rich;  
const int Size=500050;  
const int INF=0x7fffffff;  
int poor[Size],dp[Size];  
  
int Search(int target)  
{  
    int left=-1,right=n,mid;  
    while(left+1!=right)  
    {  
        mid=(left+right)/2;  
        if(target>dp[mid])  left=mid;  
        else    right=mid;  
    }  
    return right;  
}  
  
int main()  
{  
    //freopen("in.txt","r",stdin);  
    int k=0,m;  
    while(scanf("%d",&n)!=EOF)  
    {  
        k++;  
        for(int i=0;i<n;i++){  
            scanf("%d%d",&rich,&m);  
            poor[rich]=m;  
            dp[i]=INF;  
        }  
        for(int i=1;i<=n;i++){  
            dp[Search(poor[i])]=poor[i];  
        }  
        printf("Case %d:\n",k);  
        if(Search(INF)<=1){  
            printf("My king, at most %d road can be built.\n\n",Search(INF));  
        }  
        else{  
            printf("My king, at most %d roads can be built.\n\n",Search(INF));  
        }  
    }  
    return 0;  
}