还是畅通工程
Time Limit: 4000/2000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)
Total Submission(s): 45079    Accepted Submission(s): 20555


Problem Description
某省调查乡村交通状况，得到的统计表中列出了任意两村庄间的距离。省政府“畅通工程”的目标是使全省任何两个村庄间都可以实现公路交通（但不一定有直接的公路相连，只要能间接通过公路可达即可），并要求铺设的公路总长度为最小。请计算最小的公路总长度。
 

Input
测试输入包含若干测试用例。每个测试用例的第1行给出村庄数目N ( < 100 )；随后的N(N-1)/2行对应村庄间的距离，每行给出一对正整数，分别是两个村庄的编号，以及此两村庄间的距离。为简单起见，村庄从1到N编号。
当N为0时，输入结束，该用例不被处理。
 

Output
对每个测试用例，在1行里输出最小的公路总长度。
 

Sample Input
3
1 2 1
1 3 2
2 3 4
4
1 2 1
1 3 4
1 4 1
2 3 3
2 4 2
3 4 5
0
 

Sample Output
3
5


题目大意：给你n个村庄和它与其他村庄的距离，要求每个村庄都联通，并使得所修路最短，输出最短距离。



题目分析：很基础的最小生成树问题，只要会prim算法即可AC。



代码：

[cpp] view plain copy
<span style="font-family:Microsoft YaHei;font-size:18px;">#include <iostream>  
#include <cstring>  
  
using namespace std;  
#define MAX 999999999  
  
int main()  
{  
    int n;  
    while (cin >> n)  
    {  
        long long sum = 0;  
        int a[110][110] = { 0 }, visit[200] = { 0 }, n1, n2, distance;  
        if (n == 0){  
            break;  
        }  
        else{  
            for (int i = 0; i<n*(n - 1) / 2; i++){  
                cin >> n1 >> n2 >> distance;  
                a[n2][n1] = a[n1][n2] = distance;  
            }  
            visit[1] = 1;  
            for (int i = 0; i<n - 1; i++){  
                int MIN = MAX, j1, k1;  
                for (int j = 1; j <= n; j++){  
                    for (int k = j + 1; k <= n; k++){  
                        if ((visit[j] + visit[k] == 1) && a[j][k]<MIN){  
                            MIN = a[j][k];  
                            j1 = j;  
                            k1 = k;  
                        }  
                    }  
                }  
  
                sum += MIN;  
                if (visit[j1] == 0){  
                    visit[j1] = 1;  
                }  
                else{  
                    visit[k1] = 1;  
                }  
            }  
            cout << sum << endl;  
        }  
    }  
    return 0;  
}</span> 