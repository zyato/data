struct{
    #define maxn 2097153
    #define PI 3.14159265358979
    #define cd complex<double>
    int bit,len;
    int rev[maxn];
    cd a[maxn],b[maxn];
    void getrev(int bit)
    {
        for(int i=0;i<(1<<bit);i++){
            rev[i]=(rev[i>>1]>>1)|((i&1)<<(bit-1));
        }
    }
    void init(char* s,char* t)
    {
        bit=1,len=2;
        int slen=strlen(s);
        int tlen=strlen(t);
        for(bit=1;(1<<bit)<slen+tlen-1;bit++)   len<<=1;
        for(int i=0;i<len;i++){
            if(i>=slen) a[i]=0;
            else        a[i]=double(s[slen-i-1]-'0');
            if(i>=tlen) b[i]=0;
            else        b[i]=double(t[tlen-i-1]-'0');
        }
        getrev(bit);
    }
    void fft(cd* a,int n,int dft)
    {
        for(int i=0;i<n;i++){
            if(i<rev[i]){
                swap(a[i],a[rev[i]]);
            }
        }
        for(int step=1;step<n;step<<=1){
            cd wn=exp(cd(0,dft*PI/step));
            for(int j=0;j<n;j+=step<<1){
                cd wnk(1,0);
                for(int k=j;k<j+step;k++){
                    cd x=a[k];
                    cd y=wnk*a[k+step];
                    a[k]=x+y;
                    a[k+step]=x-y;
                    wnk*=wn;
                }
            }
        }
        if(dft==-1){
            for(int i=0;i<n;i++){
                a[i]/=n;
            }
        }
    }
    void solve()
    {
        fft(a,len,1);
        fft(b,len,1);
        for(int i=0;i<len;i++){
            a[i]*=b[i];
        }
        fft(a,len,-1);
    }
}Mul;